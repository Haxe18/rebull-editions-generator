CONTEXT:
The input JSON contains Red Bull product data. The goal is to clean and structure this data while preserving the original product identity. The primary objective is to separate the core edition name from its flavor description. Translation and standardization should only be applied where necessary to ensure readability and remove inconsistencies.

INSTRUCTIONS:

1. Global Analysis:
* Analyze the entire input JSON to understand the data structure before processing each item.

2. Data Extraction and Standardization (per Product):

* ID:
    * Use the `id` from the input directly. Do not modify.

* Edition Name (`name`):
    * The final `name` must ONLY contain the edition's core title (e.g., "The Summer Edition", "The Red Edition Sugarfree"). All flavor descriptions (e.g., "White Peach", "Watermelon Flavor") MUST be removed from the name.
    * Apply the following hierarchy of rules to the original name:
        * 1. Initial Translation: If the original name is in a non-Latin script (e.g., `無糖能量飲料`), translate the entire string to its clean English equivalent first before applying other rules.
        * 2. Sugar-Free Status: Identify if the name contains a sugar-free keyword (like 'Sugarfree', 'Zero', etc.). Set the `sugarfree` boolean to `true` and remember this status.
        * 3. Separate Flavor: From the (potentially translated) name, separate the core edition title from the flavor description. For example, in "The Green Edition Exotic Passion Fruit Flavor", the core title is "The Green Edition".
        * 4. Preserve Otherwise: If a name in a Latin script is already clean and contains no flavor text (e.g., "The Cereja Edition" remains "The Cereja Edition"), it MUST be preserved as is.

* Flavor Description (`flavor_description`):
    * This step is mandatory and unconditional for every product.
    * Take the `details.standfirst` text from the input.
    * It MUST ALWAYS be translated into proper English, regardless of its content.
    * The resulting English text is the final value for `flavor_description`. There are no exceptions to this translation rule.

* Flavor (`flavor`):
    * 1. Primary Extraction: First, attempt to extract a specific, named taste (like a fruit, herb, etc., e.g., "Juneberry" or "Woodruff and Pink Grapefruit") from the English `flavor_description` that was created in the previous step.
    * 2. Fallback Logic:
        * a. If a specific taste IS found in the `flavor_description`, that taste becomes the base for the final `flavor`.
        * b. If NO specific taste is found in the `flavor_description` (e.g., the text is generic like "Wings without sugar..."), then the base for the final `flavor` MUST be the original, unmodified value from the input's `flavour` field.
    * 3. Mandatory Cleaning and Formatting: Apply the following rules to the flavor base that was determined in the previous step:
        * a. Remove Keywords: Strictly remove the following exact words (case-insensitive): "Flavor", "Taste", "Flavour".
        * b. Standardize Connectors: Convert hyphens (-) and ampersands (&) to " and ". Preserve " and ".
        * c. Preserve Compound Flavors: Keep full flavor names intact (e.g., "Pink Grapefruit").
        * d. Apply Title Case.

3. Output Structure Specification

* The final output MUST be a single, valid JSON object.
* The order and original casing of the root country keys MUST be preserved.
* Each country object must contain `flag` and a list of `editions`.
* Each product object in `editions` must contain `id`, `name`, `flavor`, `flavor_description`, `sugarfree`.
* Flag Logic: This is a mandatory conversion.
    * 1. If the `flag` value is a standard country code (e.g., "US", "DE"), it MUST be converted into the corresponding country flag emoji (e.g., "US" becomes 🇺🇸, "DE" becomes 🇩🇪).
    * 2. If the `flag` is "Worldwide" and the root key is "international", the output flag MUST be the globe emoji 🌍.
    * 3. If the `flag` is "Worldwide" and the root key is a region (e.g., "caribbean", "middle-east"), the output flag MUST be a suitable regional emoji (e.g., "caribbean" -> 🌴, "middle-east" -> 🐪). For any other regions, choose a suitable representative emoji.
* Final Text Cleaning: Trim leading/trailing whitespace and remove special characters (`*`, `#`) and footnote text from all final string values.

Your response must be ONLY the final, clean JSON object. Do not include any other text, explanations, or Markdown formatting.

INPUT DATA (RAW JSON):
{raw_json_str}
