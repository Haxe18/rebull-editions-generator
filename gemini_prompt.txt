CONTEXT:
The input JSON contains Red Bull product data. The goal is to clean and structure this data while preserving the original product identity. The primary objective is to separate the core edition name from its flavor description. Translation and standardization are applied strategically to ensure consistency and readability.

COMPLETE EXAMPLE (FEW-SHOT):

* Input Snippet:
    ```json
    {{
      "Albania": {{
        "flag": "AL",
        "editions": [
          {{
            "id": "82e096b8-cdbe-425f-ab64-9908419911af:sq-AL",
            "name": "Energy Drink",
            "flavor": "Energy Drink",
            "standfirst": "Red Bull Energy Drink është vlerësuar në mbarë botën nga atletë të nivelit më të lartë, studentë, punonjës me mbingarkesë profesionale, si edhe gjatë udhёtimeve të gjata."
          }}
        ]
      }},
      "Australia": {{
        "flag": "AU",
        "editions": [
          {{
            "id": "9ed8b16c-83bf-4802-b0d4-fd276f9a5bf7:en-AU",
            "name": "Winter Edition",
            "flavor": " Iced Vanilla Berry",
            "standfirst": "The Red Bull Winter Ediation: The Energy Drink with the exceptional taste of blueberry, vanilla, and icy-fresh notes of eucalyptus."
          }}
        ]
      }},
      "Belgium": {{
        "flag": "BE",
        "editions": [
          {{
            "id": "611996f5-8813-46c3-9b18-4c193d39d9d0:nl-BE",
            "name": "The Lime Green Edition",
            "flavor": "Curuba",
            "standfirst": "De Red Bull Lime Green Edition heeft de exotische smaak van  curuba, afgewerkt met een vleugje vlierbloesem.",
          }}
        ]
      }},
      "Czech Republic": {{
        "flag": "CZ",
        "editions": [
          {{
            "id": "9f5e826b-3589-4e15-8da7-86759325fc9b:cs-CZ",
            "name": "The Green Edition",
            "flavor": "Curuba Elderflower",
            "standfirst": "Red Bull Green Edition s příchutí exotické curuby, doplněná tóny bezového květu.",
          }}
        ]
      }},
      "Germany": {{
        "flag": "DE",
        "editions": [
          {{
            "id": "a87efb73-0db7-4115-b761-0e00fedb86e9:de-DE",
            "name": "SugarFree",
            "flavor": "Sugarfree",
            "standfirst": "Flügel ohne Zucker: Red Bull Sugarfree ist Red Bull Energy Drink ohne Zucker."
          }},
          {{
            "id": "eb9c22db-6c3d-4a68-b4e3-c915c59b1414:de-DE",
            "name": "Lilac Edition Sugarfree",
            "flavor": "Wildflower-and-Pink Grapefruit",
            "standfirst": "Die Red Bull Lilac Edition Sugarfree mit dem Geschmack von Waldmeister und Pink Grapefruit. "
          }}
        ]
      }}
    }}
    ```

* Expected Output Snippet:
    ```json
    {{
      "Albania": {{
        "flag": "🇦🇱",
        "editions": [
          {{
            "id": "82e096b8-cdbe-425f-ab64-9908419911af:sq-AL",
            "name": "Energy Drink",
            "flavor": "Energy Drink",
            "flavor_description": "Red Bull Energy Drink is appreciated worldwide by top athletes, busy professionals, university students and travellers on long journeys.",
            "sugarfree": false
          }}
        ]
      }},
      "Australia": {{
        "flag": "🇦🇺",
        "editions": [
          {{
            "id": "9ed8b16c-83bf-4802-b0d4-fd276f9a5bf7:en-AU",
            "name": "The Winter Edition",
            "flavor": "Iced Vanilla Berry",
            "flavor_description": "The Red Bull Winter Edition: The Energy Drink with the exceptional taste of blueberry, vanilla, and icy-fresh notes of eucalyptus.",
            "sugarfree": false
          }}
        ]
      }},
      "Belgium": {{
        "flag": "🇧🇪",
        "editions": [
          {{
            "id": "611996f5-8813-46c3-9b18-4c193d39d9d0:nl-BE",
            "name": "The Lime Green Edition",
            "flavor": "Curuba-Elderflower",
            "flavor_description": "The Red Bull Lime Green Edition has the exotic taste of Curuba, finished with a hint of elderflower.",
            "sugarfree": false
          }}
        ]
      }},
      "Czech Republic": {{
        "flag": "🇨🇿",
        "editions": [
          {{
            "id": "9f5e826b-3589-4e15-8da7-86759325fc9b:cs-CZ",
            "name": "The Green Edition",
            "flavor": "Curuba-Elderflower",
            "flavor_description": "Red Bull Green Edition with the flavor of exotic curuba complemented by elderflower notes",
            "sugarfree": false
          }}
        ]
      }},
      "Germany": {{
        "flag": "🇩🇪",
        "editions": [
          {{
            "id": "a87efb73-0db7-4115-b761-0e00fedb86e9:de-DE",
            "name": "Energy Drink Sugarfree",
            "flavor": "Sugarfree",
            "flavor_description": "Wings without sugar: Red Bull Sugarfree is Red Bull Energy Drink without sugar.",
            "sugarfree": true
          }},
          {{
            "id": "eb9c22db-6c3d-4a68-b4e3-c915c59b1414:de-DE",
            "name": "The Lilac Edition Sugarfree",
            "flavor": "Woodruff & Pink Grapefruit",
            "flavor_description": "The Red Bull Lilac Edition Sugarfree with the taste of woodruff and pink grapefruit.",
            "sugarfree": true
          }}
        ]
      }}
    }}
    ```

INSTRUCTIONS:

**1. Global Rules:**
- Analyze the entire input JSON to understand the data structure before processing each item.
- The final output MUST be a single, valid JSON object.
- The order and original casing of the root country keys MUST be preserved.

**2. Per-Product Processing Logic:**
For each product object in the `editions` list, create a new object by applying the following rules in order:

- **`id` (string):**
  - Use the `id` from the input directly. Do not modify.

- **`sugarfree` (boolean):**
  - Initialize as `false`.
  - Analyze the original `name` and `flavor` from the input. If either contains a sugar-free keyword (e.g., 'Sugarfree', 'Zero', 'Zuckerfrei', '無糖', 'ZERO CALORIAS'), set this field to `true`.

- **`flavor_description` (string):**
  - This is a mandatory and unconditional step.
  - Take the `standfirst` text from the input.
  - It MUST ALWAYS be translated into proper, natural-sounding English, regardless of its original language.
  - Preserve Title Case for flavors within the text.

- **`flavor` (string): (Lookup-First Approach)**
  - **Goal:** Match the product's flavor to a pre-approved list, falling back to intelligent creation only when necessary.

  - **APPROVED FLAVOR LIST (Source of Truth):**
    ```
    [
      "Blueberry",
      "Cactus Fruit",
      "Coconut-Berry",
      "Curuba-Elderflower",
      "Dragon Fruit",
      "Energy Drink",
      "Forest Berry",
      "Forest Fruit",
      "Grapefruit & Blossom",
      "Iced Gummy Bear",
      "Iced Vanilla Berry",
      "Juneberry",
      "Passion Fruit & Melon",
      "Peach",
      "Pear Cinnamon",
      "Strawberry & Peach",
      "Strawberry-Apricot",
      "Strawberry-Apricot Sugarfree",
      "Sugarfree",
      "Tropical Fruits",
      "Watermelon",
      "White Peach",
      "Woodruff & Pink Grapefruit",
      "Zero Sugar",
    ]
    ```

  - **Step 1: Create a Candidate Flavor.**
    - To find the most accurate flavor, analyze both the `flavor` and `standfirst` fields from the input. Prioritize `standfirst` if it contains more specific flavor information (e.g., `Waldmeister` is more specific than a generic term).
    - **CRITICAL Failsafe:** You MUST perform a direct translation. Do NOT invent or substitute flavors. For example, if an input flavor is "Iced Vanilla Berry", the output MUST be a direct translation of that, NOT "Curuba-Elderflower" or any other unrelated flavor. This is a strict rule in ALL steps to prevent data corruption.
    - Translate the identified flavor text to clean English. Remove generic words like "Taste", "Flavor" or "flavor". This result is your "candidate flavor".
    - Example: For a German product with `standfirst` containing "Geschmack von Waldmeister und Pink Grapefruit", the candidate flavor is "Woodruff and Pink Grapefruit".

  - **Step 2: Match Against Approved List.**
    - Compare your "candidate flavor" semantically against the "APPROVED FLAVOR LIST". This match must be intelligent, not literal.
    - **CRITICAL RULE:** Only match if the flavors are TRULY the same product. Do NOT match different flavors just because they sound similar.
    - Ignore "and", "-" (hypen) or "&" ampersands in source flavor when comparing the list.
      - Example: "Strawberry and apricot" -> "Strawberry-Apricot"
    - **Crucially, you must recognize variations:**
      - A flavor candidate like "Curuba Elderflower" (with a space) MUST be matched to `"Curuba-Elderflower"` (with a hyphen) from the list.
      - A flavor candidate like "ZERO CALORIES" MUST be matched to `"Zero Sugar"` from the list.
      - A flavor candidate like "Aprikose Erdbeere" (German) MUST be matched to `"Strawberry-Apricot"` from the list.
    - If a confident match is found, use the **exact string** from the approved list as the final value.

  - **Step 3: Intelligent Fallback for Unlisted Flavors.
    - **Execute this step ONLY if NO confident match was found in Step 2.**
    - Use the "candidate flavor" from Step 1 and apply the following formatting rules to create a new, standardized flavor name:
    - **A. Standardize Initial Separators: First, replace all slashes (/) and the word "and" (case-insensitive) with a single space to create a clean baseline. CRUCIALLY, leave ampersands (&) untouched at this stage.
    - **B. Apply Semantic Formatting: Next, analyze the flavor components and apply the following logic:
      - **Step 1: Check for descriptive adjectives. If a word is a simple adjective describing the main flavor (like a color or attribute), separate the words with a space.
        - Example: `White Peach` -> `White Peach`
      - **Step 2: Join all other flavors with a hyphen. If Step 1 does not apply, all flavor components are joined with a hyphen (-). This is the default rule for all flavor blends.
        - Example: `Curuba Elderflower -> `Curuba-Elderflower`
    - C. Final Formatting: Apply Title Case (capitalizing every word, even after a hyphen) and trim whitespace.

- **`name` (string):**
  - **Goal:** The final `name` must contain the edition's core title, with flavor descriptions removed but functional modifiers (like "Sugarfree", "Zero", "Zuckerfrei", or their translations) preserved. Functional modifiers are never considered part of the flavor and must remain in the name.
  - **Step 1: Typo Correction:** First, correct common typos in the original `name`. Specifically, replace any instance of "Ediation" with "Edition".
  - **Step 2: Isolate Core Title:** Analyze the (potentially typo-corrected) name to separate the core product title from descriptive flavor words.
    - **Principle:** The core title represents the product line (often using words like "Edition", "Summer", "Winter", colors), while flavor words are specific tastes to be removed. Use your semantic understanding to make this distinction. Sugarfree/Zero modifiers may appear either in the middle or at the end of the name and must be preserved in their correct position.
    - **Example 1:** "The Summer Edition Juneberry" -> Core title is "The Summer Edition".
    - **Example 2:** "The Green Edition Exotic Passion Fruit" -> Core title is "The Green Edition".
    - **Example 3:** "The Coconut Edition Sugarfree" -> Core title is "The Coconut Edition Sugarfree"
    - **Example 4:** "Energy Drink Sugarfree" -> Core title is "Energy Drink Sugarfree"
  - **Step 3: Add "The" to Editions:** If the resulting core title contains the word "Edition" and does not already start with "The ", add it to the beginning.
  - **Step 4: Translate:** If the core title is in a non-Latin script, translate it to its clean English equivalent.
  - **Step 5: Handle Generic Names:** If the core title after Step 2 is ONLY "Zero", ONLY "Sugarfree", or is empty, the name becomes "Energy Drink". If the original was "Zero" or "Sugarfree", append that modifier.
    - **Example 1:** "Zero" -> "Energy Drink Zero".
    - **Example 2:** "SugarFree" -> "Energy Drink Sugarfree".
    - **Example 3:** "Watermelon" (which resulted in an empty core title) -> "Energy Drink".
  - **Step 6: Finalize:** The resulting string is the final value for `name`.

**3. Final Output Structure & Cleanup:**
- Each country object must contain a `flag` and a list of `editions`.
- Each product object in `editions` must contain `id`, `name`, `flavor`, `flavor_description`, and `sugarfree`.
- **Flag Conversion Logic:**
  - Country Codes: Convert standard codes to flag emojis (e.g., "US" -> 🇺🇸, "DE" -> 🇩🇪).
  - International: If `flag` is "Worldwide" *and* the root key is `international`, set the flag to the globe emoji 🌍.
  - Regions: If `flag` is "Worldwide" choose a suitable regional emoji ("caribbean" -> 🌴, "middle-east" -> 🐪, etc.), do NOT use a globe emoji 🌍.
- **Final Text Cleaning:** In ALL final string values, especially within `flavor_description`, you MUST replace every instance of the word "sugars" with "sugar" case insensitive. This is a non-negotiable final step.

**RESPONSE FORMAT:**
Your response must be ONLY the final, clean JSON object. Do not include any other text, explanations, or Markdown formatting.

INPUT DATA (RAW JSON):
```{raw_json_str}```
