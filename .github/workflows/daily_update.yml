name: Generate Red Bull Data and Create Release

on:
  push:
    branches:
      - main
  schedule:
    - cron: '11 5 * * *' # Run every day at 5:11 UTC
  workflow_dispatch: # Allow manual start

permissions:
  contents: write # Allow the workflow to commit code and create releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run data generation script
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger detected - running with force mode"
            python3 redbull_editions_json_generate.py --force
          else
            python3 redbull_editions_json_generate.py
          fi
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Check for changes
        id: check_changes
        run: |
          if ! git diff --quiet --exit-code dist/; then
            echo "Changes detected in dist/ folder."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add dist/
          git commit -m "chore: Update Red Bull edition data"
          git push

      - name: Create Release
        if: steps.check_changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Creates a new Release with current date and changelog.md as description
          gh release create "v$(date +'%Y.%m.%d-%H%M')" \
            --title "Data Update $(date +'%Y-%m-%d %H:%M')" \
            --notes-file dist/changelog.md
